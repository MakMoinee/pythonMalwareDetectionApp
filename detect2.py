from scapy.all import *
import sys

# Function to determine the type of payload based on file signatures
def get_payload_type(payload):
    # Add your logic here to determine the payload type based on file signatures or other characteristics
    return "Unknown"

# Callback function to process captured packets
def packet_callback(packet):
    
    try:
        packetType = ""
        if packet.haslayer(Raw):
            payload = packet[Raw].load
            if payload:
                payload_type = get_payload_type(payload)
                packetType = payload_type
                print(f"Packet Type: {payload_type}")
            else:
                packetType = "Unknown"
                print("Packet does not contain recognizable payload data")
        else:
            packetType = "Unknown"
            print("Packet does not contain payload data")

        current_id = sys.argv[1] if len(sys.argv) > 1 else 'default_id'
        with open(f"./logs/{current_id}.txt", "a") as log_file:
            log_file.write(f"Packet Type: {packetType}\nPacket Details: {packet.summary()}\n\n")
            log_file.write("\n")
    except Exception as e:
        print(f"Error processing packet: {e}")
        print(packet.summary())
    
    

# Capture packets on the specified interface
sniff(iface='Wi-Fi', prn=packet_callback, timeout=10)
